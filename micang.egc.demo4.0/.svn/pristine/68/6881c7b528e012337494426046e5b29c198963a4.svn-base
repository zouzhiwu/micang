package com.game.config;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.common.template.MemberDuanTemplate;
import com.game.util.PoiUtil;

public class MemberDuanConfig {
	
	
	private final static String sheetName = "Member_duan";
	private static final Logger logger = LoggerFactory.getLogger(MemberDuanConfig.class);
	public static Map<Integer, MemberDuanTemplate> map = new HashMap<Integer, MemberDuanTemplate>();
	
	public static Map<String, MemberDuanTemplate> memberIdAscendingMap = new HashMap<String, MemberDuanTemplate>();
	
	public static List<MemberDuanTemplate> list = new ArrayList<MemberDuanTemplate>();
	
	public static void init() {
		InputStream in = MemberConfig.class.getClassLoader().getResourceAsStream("template/Member_duan.xlsx");
		try {
			XSSFWorkbook workBook = new XSSFWorkbook(in);
			XSSFSheet sheet = workBook.getSheet(sheetName);
			int i = 0;
			for (Iterator<Row> iterator = sheet.rowIterator(); iterator.hasNext();) {
				XSSFRow row = (XSSFRow) iterator.next();
				if (i >= 2) {
					int index = 0;
					Integer id = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Byte quality = PoiUtil.getByte((XSSFCell)row.getCell(index++));
					Byte ascending = PoiUtil.getByte((XSSFCell)row.getCell(index++));
					String material1 = PoiUtil.getString((XSSFCell)row.getCell(index++));
					String number = PoiUtil.getString((XSSFCell)row.getCell(index++));
					
					Short y1 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short v1 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short y2 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short v2 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short y3 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short v3 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short y4 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short v4 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short y5 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short v5 = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					
					Short grade = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					String txt = PoiUtil.getString((XSSFCell)row.getCell(index++));
					
					MemberDuanTemplate memberDuanTemplate = new MemberDuanTemplate(id, quality, ascending, material1, number, y1,
																v1,  y2, v2, y3, v3, y4, v4, y5, v5, grade,txt);
					

					map.put(memberDuanTemplate.getId(), memberDuanTemplate);
					memberIdAscendingMap.put(quality+"_"+ascending, memberDuanTemplate);
					
					list.add(memberDuanTemplate);
				}
				i++;
			}
			logger.info(String.format("memberDuanTemplate config loaded record %d", i - 2));
			workBook.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	
	
	
	
	
	
	
	
	

}
