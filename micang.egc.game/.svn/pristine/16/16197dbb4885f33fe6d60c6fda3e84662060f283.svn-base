package com.game.config;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.common.template.HeroTemplate;
import com.game.util.PoiUtil;

public class HeroConfig {
	private final static String sheetName = "Hero";
	private static final Logger logger = LoggerFactory.getLogger(HeroConfig.class);
	public static Map<Integer, HeroTemplate> map = new HashMap<Integer, HeroTemplate>();
	
	public static void init() {
		InputStream in = HeroConfig.class.getClassLoader().getResourceAsStream("template/Hero.xlsx");
		try {
			XSSFWorkbook workBook = new XSSFWorkbook(in);
			XSSFSheet sheet = workBook.getSheet(sheetName);
			int i = 0;
			for (Iterator<Row> iterator = sheet.rowIterator(); iterator.hasNext();) {
				XSSFRow row = (XSSFRow) iterator.next();
				if (i >= 2) {
					int index = 0;
					Integer id = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					String name = PoiUtil.getString((XSSFCell)row.getCell(index++));
					String icon = PoiUtil.getString((XSSFCell)row.getCell(index++));
					Byte work = PoiUtil.getByte((XSSFCell)row.getCell(index++));
					Integer hp = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer ad = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer ap = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer ac = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer mr = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Short as = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short aoe = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short speed = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Integer cd = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Short acrt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short mcrt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short apt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short mpt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short ha = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short dr = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Integer growthHp = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer growthAd = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer growthAp = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer growthAc = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Integer growthMr = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Short growthAs = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthAoe = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthSpeed = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Integer growthCd = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					Short growthAcrt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthMcrt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthApt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthMpt = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthHa = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Short growthDr = PoiUtil.getShort((XSSFCell)row.getCell(index++));
					Integer skillId = PoiUtil.getInt((XSSFCell)row.getCell(index++));
					String skillAbout = PoiUtil.getString((XSSFCell)row.getCell(index++));
					String heroAbout = PoiUtil.getString((XSSFCell)row.getCell(index++));
					HeroTemplate heroTemplate = new HeroTemplate(id, name, icon, work, hp, ad, ap, ac, mr, as, aoe, speed, cd, acrt, mcrt, apt, mpt, ha, dr,growthHp, growthAd, growthAp, growthAc, growthMr, growthAs, growthAoe, growthSpeed, growthCd, growthAcrt, growthMcrt, growthApt, growthMpt, growthHa, growthDr, skillId, skillAbout, heroAbout);
					map.put(heroTemplate.getId(), heroTemplate);
				}
				i++;
			}
			logger.info(String.format("hero config loaded record %d", i - 2));
			workBook.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
}